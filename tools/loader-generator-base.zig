const std = @import("std");

pub const c = @cImport({
    @cDefine("XR_USE_GRAPHICS_API_VULKAN", "1");
    @cDefine("XR_EXTENSION_PROTOTYPES", "1");
    @cInclude("vulkan/vulkan.h");
    @cInclude("openxr/openxr.h");
    @cInclude("openxr/openxr_platform.h");
    @cInclude("SDL3_image/SDL_image.h");
});

const cimport = c;

pub const LoadError = error{
    LoadFailed,
};

pub inline fn xrCheck(result: c.XrResult) XrError!void {
    if (result == c.XR_SUCCESS) return;
    return wrapXrError(result);
}

pub const XrError = error{
    ValidationFailure,
    RuntimeFailure,
    OutOfMemory,
    ApiVersionUnsupported,
    InitializationFailed,
    FunctionUnsupported,
    FeatureUnsupported,
    ExtensionNotPresent,
    LimitReached,
    SizeInsufficient,
    HandleInvalid,
    InstanceLost,
    SessionRunning,
    SessionNotRunning,
    SessionLost,
    SystemInvalid,
    PathInvalid,
    PathCountExceeded,
    PathFormatInvalid,
    PathUnsupported,
    LayerInvalid,
    LayerLimitExceeded,
    SwapchainRectInvalid,
    SwapchainFormatUnsupported,
    ActionTypeMismatch,
    SessionNotReady,
    SessionNotStopping,
    TimeInvalid,
    ReferenceSpaceUnsupported,
    FileAccessError,
    FileContentsInvalid,
    FormFactorUnsupported,
    FormFactorUnavailable,
    ApiLayerNotPresent,
    CallOrderInvalid,
    GraphicsDeviceInvalid,
    PoseInvalid,
    IndexOutOfRange,
    ViewConfigurationTypeUnsupported,
    EnvironmentBlendModeUnsupported,
    NameDuplicated,
    NameInvalid,
    ActionsetNotAttached,
    ActionsetsAlreadyAttached,
    LocalizedNameDuplicated,
    LocalizedNameInvalid,
    GraphicsRequirementsCallMissing,
    RuntimeUnavailable,
    UnknownError,
};

pub inline fn wrapXrError(code: c.XrResult) XrError {
    return switch (code) {
        c.XR_ERROR_VALIDATION_FAILURE => error.ValidationFailure,
        c.XR_ERROR_RUNTIME_FAILURE => error.RuntimeFailure,
        c.XR_ERROR_OUT_OF_MEMORY => error.OutOfMemory,
        c.XR_ERROR_API_VERSION_UNSUPPORTED => error.ApiVersionUnsupported,
        c.XR_ERROR_INITIALIZATION_FAILED => error.InitializationFailed,
        c.XR_ERROR_FUNCTION_UNSUPPORTED => error.FunctionUnsupported,
        c.XR_ERROR_FEATURE_UNSUPPORTED => error.FeatureUnsupported,
        c.XR_ERROR_EXTENSION_NOT_PRESENT => error.ExtensionNotPresent,
        c.XR_ERROR_LIMIT_REACHED => error.LimitReached,
        c.XR_ERROR_SIZE_INSUFFICIENT => error.SizeInsufficient,
        c.XR_ERROR_HANDLE_INVALID => error.HandleInvalid,
        c.XR_ERROR_INSTANCE_LOST => error.InstanceLost,
        c.XR_ERROR_SESSION_RUNNING => error.SessionRunning,
        c.XR_ERROR_SESSION_NOT_RUNNING => error.SessionNotRunning,
        c.XR_ERROR_SESSION_LOST => error.SessionLost,
        c.XR_ERROR_SYSTEM_INVALID => error.SystemInvalid,
        c.XR_ERROR_PATH_INVALID => error.PathInvalid,
        c.XR_ERROR_PATH_COUNT_EXCEEDED => error.PathCountExceeded,
        c.XR_ERROR_PATH_FORMAT_INVALID => error.PathFormatInvalid,
        c.XR_ERROR_PATH_UNSUPPORTED => error.PathUnsupported,
        c.XR_ERROR_LAYER_INVALID => error.LayerInvalid,
        c.XR_ERROR_LAYER_LIMIT_EXCEEDED => error.LayerLimitExceeded,
        c.XR_ERROR_SWAPCHAIN_RECT_INVALID => error.SwapchainRectInvalid,
        c.XR_ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED => error.SwapchainFormatUnsupported,
        c.XR_ERROR_ACTION_TYPE_MISMATCH => error.ActionTypeMismatch,
        c.XR_ERROR_SESSION_NOT_READY => error.SessionNotReady,
        c.XR_ERROR_SESSION_NOT_STOPPING => error.SessionNotStopping,
        c.XR_ERROR_TIME_INVALID => error.TimeInvalid,
        c.XR_ERROR_REFERENCE_SPACE_UNSUPPORTED => error.ReferenceSpaceUnsupported,
        c.XR_ERROR_FILE_ACCESS_ERROR => error.FileAccessError,
        c.XR_ERROR_FILE_CONTENTS_INVALID => error.FileContentsInvalid,
        c.XR_ERROR_FORM_FACTOR_UNSUPPORTED => error.FormFactorUnsupported,
        c.XR_ERROR_FORM_FACTOR_UNAVAILABLE => error.FormFactorUnavailable,
        c.XR_ERROR_API_LAYER_NOT_PRESENT => error.ApiLayerNotPresent,
        c.XR_ERROR_CALL_ORDER_INVALID => error.CallOrderInvalid,
        c.XR_ERROR_GRAPHICS_DEVICE_INVALID => error.GraphicsDeviceInvalid,
        c.XR_ERROR_POSE_INVALID => error.PoseInvalid,
        c.XR_ERROR_INDEX_OUT_OF_RANGE => error.IndexOutOfRange,
        c.XR_ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED => error.ViewConfigurationTypeUnsupported,
        c.XR_ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED => error.EnvironmentBlendModeUnsupported,
        c.XR_ERROR_NAME_DUPLICATED => error.NameDuplicated,
        c.XR_ERROR_NAME_INVALID => error.NameInvalid,
        c.XR_ERROR_ACTIONSET_NOT_ATTACHED => error.ActionsetNotAttached,
        c.XR_ERROR_ACTIONSETS_ALREADY_ATTACHED => error.ActionsetsAlreadyAttached,
        c.XR_ERROR_LOCALIZED_NAME_DUPLICATED => error.LocalizedNameDuplicated,
        c.XR_ERROR_LOCALIZED_NAME_INVALID => error.LocalizedNameInvalid,
        c.XR_ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING => error.GraphicsRequirementsCallMissing,
        c.XR_ERROR_RUNTIME_UNAVAILABLE => error.RuntimeUnavailable,
        else => error.UnknownError,
    };
}

pub inline fn vkCheck(result: c_int) VkError!void {
    if (result == c.XR_SUCCESS) return;
    return wrapVkError(result);
}

pub const VkError = error{
    NotReady,
    Timeout,
    EventSet,
    EventReset,
    Incomplete,
    ErrorOutOfHostMemory,
    ErrorOutOfDeviceMemory,
    ErrorInitializationFailed,
    ErrorDeviceLost,
    ErrorMemoryMapFailed,
    ErrorLayerNotPresent,
    ErrorExtensionNotPresent,
    ErrorFeatureNotPresent,
    ErrorIncompatibleDriver,
    ErrorTooManyObjects,
    ErrorFormatNotSupported,
    ErrorFragmentedPool,
    ErrorUnknown,
    ErrorOutOfPoolMemory,
    ErrorInvalidExternalHandle,
    ErrorFragmentation,
    ErrorInvalidOpaqueCaptureAddress,
    PipelineCompileRequired,
    ErrorSurfaceLostKhr,
    ErrorNativeWindowInUseKhr,
    SuboptimalKhr,
    ErrorOutOfDateKhr,
    ErrorIncompatibleDisplayKhr,
    ErrorValidationFailedExt,
    ErrorInvalidShaderNv,
    ErrorImageUsageNotSupportedKhr,
    ErrorVideoPictureLayoutNotSupportedKhr,
    ErrorVideoProfileOperationNotSupportedKhr,
    ErrorVideoProfileFormatNotSupportedKhr,
    ErrorVideoProfileCodecNotSupportedKhr,
    ErrorVideoStdVersionNotSupportedKhr,
    ErrorInvalidDrmFormatModifierPlaneLayoutExt,
    ErrorNotPermittedKhr,
    ErrorFullScreenExclusiveModeLostExt,
    ThreadIdleKhr,
    ThreadDoneKhr,
    OperationDeferredKhr,
    OperationNotDeferredKhr,
    ErrorInvalidVideoStdParametersKhr,
    ErrorCompressionExhaustedExt,
    IncompatibleShaderBinaryExt,
    ErrorOutOfPoolMemoryKhr,
    ErrorInvalidExternalHandleKhr,
    ErrorFragmentationExt,
    ErrorNotPermittedExt,
    ErrorInvalidDeviceAddressExt,
    ErrorInvalidOpaqueCaptureAddressKhr,
    PipelineCompileRequiredExt,
    ErrorPipelineCompileRequiredExt,
    ErrorIncompatibleShaderBinaryExt,
    UnknownError,
};

pub inline fn wrapVkError(code: c.VkResult) VkError {
    return switch (code) {
        c.VK_NOT_READY => error.NotReady,
        c.VK_TIMEOUT => error.Timeout,
        c.VK_EVENT_SET => error.EventSet,
        c.VK_EVENT_RESET => error.EventReset,
        c.VK_INCOMPLETE => error.Incomplete,
        c.VK_ERROR_OUT_OF_HOST_MEMORY => error.ErrorOutOfHostMemory,
        c.VK_ERROR_OUT_OF_DEVICE_MEMORY => error.ErrorOutOfDeviceMemory,
        c.VK_ERROR_INITIALIZATION_FAILED => error.ErrorInitializationFailed,
        c.VK_ERROR_DEVICE_LOST => error.ErrorDeviceLost,
        c.VK_ERROR_MEMORY_MAP_FAILED => error.ErrorMemoryMapFailed,
        c.VK_ERROR_LAYER_NOT_PRESENT => error.ErrorLayerNotPresent,
        c.VK_ERROR_EXTENSION_NOT_PRESENT => error.ErrorExtensionNotPresent,
        c.VK_ERROR_FEATURE_NOT_PRESENT => error.ErrorFeatureNotPresent,
        c.VK_ERROR_INCOMPATIBLE_DRIVER => error.ErrorIncompatibleDriver,
        c.VK_ERROR_TOO_MANY_OBJECTS => error.ErrorTooManyObjects,
        c.VK_ERROR_FORMAT_NOT_SUPPORTED => error.ErrorFormatNotSupported,
        c.VK_ERROR_FRAGMENTED_POOL => error.ErrorFragmentedPool,
        c.VK_ERROR_UNKNOWN => error.ErrorUnknown,
        c.VK_ERROR_OUT_OF_POOL_MEMORY => error.ErrorOutOfPoolMemory,
        c.VK_ERROR_INVALID_EXTERNAL_HANDLE => error.ErrorInvalidExternalHandle,
        c.VK_ERROR_FRAGMENTATION => error.ErrorFragmentation,
        c.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS => error.ErrorInvalidOpaqueCaptureAddress,
        c.VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT => error.PipelineCompileRequired,
        c.VK_ERROR_SURFACE_LOST_KHR => error.ErrorSurfaceLostKhr,
        c.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR => error.ErrorNativeWindowInUseKhr,
        c.VK_SUBOPTIMAL_KHR => error.SuboptimalKhr,
        c.VK_ERROR_OUT_OF_DATE_KHR => error.ErrorOutOfDateKhr,
        c.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR => error.ErrorIncompatibleDisplayKhr,
        c.VK_ERROR_VALIDATION_FAILED_EXT => error.ErrorValidationFailedExt,
        c.VK_ERROR_INVALID_SHADER_NV => error.ErrorInvalidShaderNv,
        c.VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR => error.ErrorImageUsageNotSupportedKhr,
        c.VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR => error.ErrorVideoPictureLayoutNotSupportedKhr,
        c.VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR => error.ErrorVideoProfileOperationNotSupportedKhr,
        c.VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR => error.ErrorVideoProfileFormatNotSupportedKhr,
        c.VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR => error.ErrorVideoProfileCodecNotSupportedKhr,
        c.VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR => error.ErrorVideoStdVersionNotSupportedKhr,
        c.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT => error.ErrorInvalidDrmFormatModifierPlaneLayoutExt,
        c.VK_ERROR_NOT_PERMITTED_KHR => error.ErrorNotPermittedKhr,
        c.VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT => error.ErrorFullScreenExclusiveModeLostExt,
        c.VK_THREAD_IDLE_KHR => error.ThreadIdleKhr,
        c.VK_THREAD_DONE_KHR => error.ThreadDoneKhr,
        c.VK_OPERATION_DEFERRED_KHR => error.OperationDeferredKhr,
        c.VK_OPERATION_NOT_DEFERRED_KHR => error.OperationNotDeferredKhr,
        c.VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR => error.ErrorInvalidVideoStdParametersKhr,
        c.VK_ERROR_COMPRESSION_EXHAUSTED_EXT => error.ErrorCompressionExhaustedExt,
        c.VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT => error.ErrorIncompatibleShaderBinaryExt,
        else => error.UnknownError,
    };
}
